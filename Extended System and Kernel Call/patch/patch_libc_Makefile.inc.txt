1c1,26
< .PATH:	${.CURDIR}/sys-minix
---
> #	$NetBSD: Makefile.inc,v 1.14 2012/03/21 14:52:40 christos Exp $
> #	@(#)Makefile	8.2 (Berkeley) 2/3/94
> #
> # All library objects contain sccsid strings by default; they may be
> # excluded as a space-saving measure.  To produce a library that does
> # not contain these strings, delete -DLIBC_SCCS and -DSYSLIBC_SCCS
> # from CPPFLAGS below.  To remove these strings from just the system call
> # stubs, remove just -DSYSLIBC_SCCS from CPPFLAGS.
> #
> # The NLS (message catalog) functions are always in libc.  To choose that
> # strerror(), perror(), strsignal(), psignal(), etc. actually call the NLS
> # functions, put -DNLS on the CPPFLAGS line below.
> #
> # The YP functions are always in libc. To choose that getpwent() and friends
> # actually call the YP functions, put -DYP on the CPPFLAGS line below.
> #
> # The Hesiod functions are always in libc. To choose that getpwent() and friends
> # actually call the Hesiod functions, put -DHESIOD on the CPPFLAGS line below.
> .if defined(__MINIX)
> USE_INET6=no
> MKYP=no #requires RPC
> USE_JEMALLOC=no
> USE_MINIXMALLOC=yes
> USE_FORT=no
> USE_LIBTRE=no
> .endif # defined(__MINIX)
3,21c28
< SRCS+= 	accept.c access.c bind.c brk.c sbrk.c m_closefrom.c getsid.c \
< 	chdir.c chmod.c fchmod.c chown.c fchown.c chroot.c close.c \
< 	connect.c dup.c dup2.c execve.c fcntl.c flock.c fpathconf.c fork.c \
< 	fstatfs.c fstatvfs.c fsync.c ftruncate.c getdents.c getegid.c getgid.c \
< 	getgroups.c getitimer.c setitimer.c __getlogin.c getpeername.c \
< 	getpgrp.c getpid.c getppid.c priority.c getrlimit.c getsockname.c \
< 	getsockopt.c setsockopt.c gettimeofday.c geteuid.c getuid.c \
< 	ioctl.c issetugid.c kill.c link.c listen.c loadname.c lseek.c \
< 	minix_rs.c mkdir.c mkfifo.c mknod.c mmap.c mount.c nanosleep.c \
< 	open.c pathconf.c pipe.c poll.c pread.c ptrace.c pwrite.c \
< 	read.c readlink.c reboot.c recvfrom.c recvmsg.c rename.c\
< 	rmdir.c select.c sem.c sendmsg.c sendto.c setgroups.c setsid.c \
< 	setgid.c settimeofday.c setuid.c shmat.c shmctl.c shmget.c stime.c \
< 	vectorio.c shutdown.c sigaction.c sigpending.c sigreturn.c sigsuspend.c\
< 	sigprocmask.c socket.c socketpair.c stat.c statvfs.c symlink.c \
< 	sync.c syscall.c sysuname.c truncate.c umask.c unlink.c write.c \
< 	_exit.c _ucontext.c environ.c __getcwd.c vfork.c sizeup.c init.c \
< 	printmsg.c printppid.c start_plog.c stop_plog.c reset_plog.c \
< 	get_plog_size.c get_plog_byPID.c get_plog_byindex.c
---
> USE_FORT?=	yes
23,24c30
< # Minix specific syscalls.
< SRCS+= cprofile.c lseek64.c sprofile.c _mcontext.c
---
> USE_SHLIBDIR=	yes
26c32,70
< .include "${ARCHDIR}/sys-minix/Makefile.inc"
---
> .include <bsd.own.mk>
> 
> WARNS=5
> .if defined(__MINIX)
> CPPFLAGS+=	-D_LIBC
> .else
> CPPFLAGS+=	-D_LIBC -DLIBC_SCCS -DSYSLIBC_SCCS -D_REENTRANT
> CPPFLAGS+=	-D_DIAGNOSTIC
> .endif
> 
> .if (${USE_HESIOD} != "no")
> CPPFLAGS+=	-DHESIOD
> .endif
> 
> .if (${USE_INET6} != "no")
> CPPFLAGS+=	-DINET6
> .endif
> 
> CPPFLAGS+=	-DNLS
> 
> .if (${USE_YP} != "no")
> CPPFLAGS+=	-DYP
> .endif
> 
> # Set lint to exit on warnings
> LINTFLAGS+=	-w
> # ignore 'empty translation unit' warnings.
> LINTFLAGS+=	-X 272
> 
> .include "libcincludes.mk"
> 
> ARCHDIR=	${.CURDIR}/arch/${ARCHSUBDIR}
> AFLAGS+=	-I${ARCHDIR}
> CLEANFILES+=	tags
> 
> # Don't try to lint the C library against itself when creating llib-lc.ln
> LLIBS=
> 
> INCSDIR=	/usr/include
